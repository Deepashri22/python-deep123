# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18ZpmL-Qnmh27XP9jglxCQY05uW2vboq5
"""

from flask import Flask, render_template, request, jsonify
import json
import os
import ssl
import requests

app = Flask(__name__)

@app.route("/")
def home():
    return render_template('home.html')

@app.route("/predict", methods=['POST'])
def predict():
    # Data for the Azure ML endpoint
    data = {
        "input_data": {
            "columns": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22],
            "index": [0, 1],
            "data": [
                [20000, 2, 2, 1, 24, 2, 2, -1, -1, -2, -2, 3913, 3102, 689, 0, 0, 0, 0, 689, 0, 0, 0, 0],
                [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 10, 9, 8]
            ]
        }
    }

    def allowSelfSignedHttps(allowed):
        # Bypass the server certificate verification on the client side
        if allowed and not os.environ.get('PYTHONHTTPSVERIFY', '') and getattr(ssl, '_create_unverified_context', None):
            ssl._create_default_https_context = ssl._create_unverified_context

    allowSelfSignedHttps(True)

    body = json.dumps(data)
    url = "https://credit-endpoint-aabfd271.eastus2.inference.ml.azure.com/score"
    api_key = 'AOlze3KdJwTjHRy4jN4QrygY24gYX2vn'
    headers = {
        'Content-Type': 'application/json',
        'Authorization': f'Bearer {api_key}',
        'azureml-model-deployment': 'blue'
    }

    try:
        response = requests.post(url, data=body, headers=headers)
        result = response.json()
        return jsonify(result)  # Return the prediction as JSON
    except requests.exceptions.RequestException as e:
        return jsonify(error=str(e)), 500  # Return an error response

if __name__ == "__main__":
    app.run()